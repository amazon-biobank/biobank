extends ../layout/layout.pug

block append header

block content
  .card.o-hidden.border-0.shadow-lg.my-5.ml-5.mr-5
    .card-body.p-0
      .row
        .col-lg-12
          .p-5
            .text-center
              h1.h4.text-gray-900.mb-4 Create a Smart Contract
              p.mb-4 This contract is responsible to define the selling condition of DNA
            form.user(action='/dnaContract/new' method='post')
              .form-group
                label.mb-1(for='dnaId') DNA ID
                input#dnaId.form-control(readonly name='dnaId' type='text' value=dnaId)
              .form-row
                .form-group.col-md-6
                  label.mb-1(for='raw_data_price') Raw Data Price
                  a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" 
                    data-content="Price that the raw DNA is sold, being fully transfered to the collector. \
                      <br> The processors, to obtain the raw DNA to be processed, must deposit this value in escrow. \
                      The escrow will be closed after the insertion of processed DNA")
                  input.form-control.bio-money-input(name='raw_data_price' type='text')
                .form-group.col-md-6
                  label.mb-1(for='processed_data_price') Processed Data Price
                  a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" 
                    data-content="Price that the processed DNA is sold. This value will be transfered acording to the 'payment distribution'")
                  input.form-control.bio-money-input(name='processed_data_price' type='text')
              .card.mb-3
                .card-header Payment Distribution (in percentage)
                .card-body
                  .form-row
                    .form-group.col-md-3
                      label.mb-1(for='price') Collector ( #{contractParameters.collector.min} - #{contractParameters.collector.max} )
                      a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" data-content="You, who inserts the raw DNA.")
                      input#price.form-control.percentage(name='payment_distribution[collector]' type='text')
                    .form-group.col-md-3
                      label.mb-1(for='price') Processor ( #{contractParameters.processor.min} - #{contractParameters.processor.max} )
                      a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" data-content="Who process the DNA")
                      input#price.form-control.percentage(name='payment_distribution[processor]' type='text')
                    .form-group.col-md-3 
                      label.mb-1(for='price') Validators ( #{contractParameters.validators.min} - #{contractParameters.validators.max} )
                      a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" data-content="Those who validate the processor work (0-2 validators). The reward will be distributed equaly between then")
                      input#price.form-control.percentage(name='payment_distribution[validators]' type='text')
                    .form-group.col-md-3
                      label.mb-1(for='price') Curator ( #{contractParameters.curator.min} - #{contractParameters.curator.max} )
                      a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" data-content="Who certificate that the DNA is legitim and correct")
                      input#price.form-control.percentage(name='payment_distribution[curator]' type='text')
              .card
                .card-header Royalty Payments
                .card-body
                  .form-row.royalty-payment
                    .form-group.col-md-4
                      label.mb-1(for='price') Type
                      a.fas.fa-info-circle.ml-2(tabindex="0" data-toggle="popover" data-html="true" data-trigger="focus" 
                        data-content="'no_royalties', without any type of royalties; <br>\
                          'fixed_one_time_fee', with an unique payment, when buying DNA; <br>\
                          'proportional_one_time_fee', with an unique payment, proportional to DNA price; <br>\
                          'fixed_periodic_fee', with a periodic fixed-value payment, while the product is on the market; <br>\
                          'proportional_periodic_fee', with a periodic payment, proportional to DNA price, while the product is on the market; <br>\
                          'profit_proportional_periodic_fee', with a periodic payment, proportional to product profit (e.g. 5%);\
                          ")
                      select#custom-select.form-control.dropdown-toggle.royalty-payment-select(name='royalty_payments[0][type]' type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                          option(disabled=true selected=true) -- select an option -- 
                          option(value='no_royalties') No Royalties
                          option(value='fixed_one_time_fee') Fixed One Time Fee 
                          option(value='proportional_one_time_fee') Proportional One Time Fee
                          option(value='fixed_periodic_fee') Fixed Periodic Fee
                          option(value='proportional_periodic_fee') Proportional Periodic Fee
                          option(value='profit_proportional_periodic_fee') Profit Proportional Periodic Fee
                    .form-group.col-md-2
                      label.mb-1(for='value') Value 
                      input#price.form-control.royalty-payment-value(name='royalty_payments[0][value]' type='text')

              hr
              .float-right.mb-4.inline-block
                a.btn.btn-danger.btn-user.mr-3.px-5(href='/dnaContract')
                  | Cancel
                input.btn.btn-primary.btn-user.px-5(type='submit' value='Create')

block append scripts
  script(src='/js/royalty-payment.js')
